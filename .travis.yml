# vim ft=yaml
# travis-ci.org definition for DataLad build
language: python

python:
  # minium version
  - 3.5
  # "latest"
  - 3.8

cache:
  - apt

env:
  global:
    # will be used in the matrix, where neither other variable is used
    - BOTO_CONFIG=/tmp/nowhere
    - DATALAD_LOG_CMD_ENV=GIT_SSH_COMMAND
    - TESTS_TO_PERFORM=datalad_helloworld
    - NOSE_OPTS=-s
    # Special settings/helper for combined coverage from special remotes execution
    - COVERAGE=coverage
    - DATALAD_DATASETS_TOPURL=http://datasets-tests.datalad.org

before_install:
  # Just in case we need to check if nfs is there etc
  - sudo lsmod
  # The ultimate one-liner setup for NeuroDebian repository
  - bash <(wget -q -O- http://neuro.debian.net/_files/neurodebian-travis.sh)
  - travis_retry sudo apt-get update -qq
  - travis_retry sudo apt-get install eatmydata  # to speedup some installations

install:
  # Install standalone build of git-annex for the recent enough version
  - travis_retry sudo eatmydata apt-get install zip git-annex-standalone 
  # for metadata support
  - git config --global user.email "test@travis.land"
  - git config --global user.name "Travis Almighty"
  - cd ..; pip install -q codecov; cd -
  - pip install -r requirements-devel.txt
  #- pip install 'sphinx>=1.6.2'
  # So we could test under sudo -E with PATH pointing to installed location
  - sudo sed -i -e 's/^Defaults.*secure_path.*$//' /etc/sudoers

script:
  # Verify that setup.py build doesn't puke
  - python setup.py build
  # Test installation system-wide
  - sudo pip install .
  - mkdir -p __testhome__
  - cd __testhome__
  # Report WTF information using system wide installed version
  - datalad wtf
  # Run tests
  - http_proxy=
    PATH=$PWD/tools/coverage-bin:$PATH
    $NOSE_WRAPPER `which nosetests` $NOSE_OPTS
      -v
      --with-doctest
      --with-coverage --cover-package datalad_helloworld
      --logging-level=INFO
      $TESTS_TO_PERFORM
  - cd ..

after_success:
  - coverage combine -a /tmp/.coverage-entrypoints-*
  - codecov
